{
  "$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": true,
    "includes": [
      "**",
      "!**/dist/",
      "!**/node_modules/",
      "!**/docs/",
      "!**/build/",
      "!**/coverage/",
      "!**/test-results/",
      "!**/playwright-report/",
      "!**/local_docs/"
    ]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 120
  },
  "assist": { "actions": { "source": { "organizeImports": "on" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noExcessiveCognitiveComplexity": {
          "level": "warn",
          "options": {
            "maxAllowedComplexity": 10
          }
        },
        "noExtraBooleanCast": "warn"
      },
      "style": {
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": true,
            "requireAscii": true,
            "conventions": [{ "selector": { "kind": "enumMember" }, "formats": ["CONSTANT_CASE"] }]
          }
        },
        "noUselessElse": "error",
        "noNegationElse": "warn",
        "useTemplate": "warn",
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error"
      },
      "correctness": {
        "noUnusedVariables": "error",
        "noInvalidConstructorSuper": "error",
        "noInnerDeclarations": "warn"
      },
      "suspicious": {
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noCommentText": "error",
        "noEmptyBlockStatements": "warn"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double",
      "semicolons": "asNeeded"
    },
    "parser": {
      "unsafeParameterDecoratorsEnabled": false
    }
  },
  "overrides": [
    {
      "includes": ["**/src/**/*.js"],
      "linter": {
        "rules": {
          "suspicious": {
            "noConsole": { "level": "error", "options": { "allow": ["log", "warn", "error"] } }
          }
        }
      }
    },
    {
      "includes": ["**/scripts/**/*.cjs", "**/scripts/**/*.js"],
      "linter": {
        "rules": {
          "complexity": {
            "noExcessiveCognitiveComplexity": "off"
          },
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    },
    {
      "includes": ["**/tests/**/*.js", "**/test/**/*.js", "**/*.test.js", "**/*.spec.js", "**/playwright.config.js"],
      "linter": {
        "rules": {
          "complexity": {
            "noExcessiveCognitiveComplexity": "off"
          },
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    }
  ]
}
